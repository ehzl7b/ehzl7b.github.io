---
import Header from "./Header.astro";
import Footer from "./Footer.astro";

const { props } = Astro.props;
---

<div class="layout">
    <div class="header">
        <div>
            <Header {props} />
        </div>
    </div>
    <div class="article">
        <div>
            Page Loading...
        </div>
    </div>
    <div class="footer">
        <div>
            <Footer {props} />
        </div>
    </div>
</div>

<script define:vars={{ site: props.site }}>
    "use strict";

    // return { html, frontmatter }
    async function render(url) {
        let html = await (await fetch(`https://raw.githubusercontent.com/ehzl7b/ehzl7b.github.io/main/_md${url === "/" ? "/index" : url}.md`)).text();
        let frontmatter = "";

        if (html.startsWith("404: Not Found")) {
            html = await (await fetch(`https://raw.githubusercontent.com/ehzl7b/ehzl7b.github.io/main/_md/404.md`)).text();
        }

        if (html.startsWith("---")) {
            let t = html.indexOf("---", 3);
            if (t !== -1) {
                frontmatter = html.slice(3, t).trim();
                html = html.slice(t + 3).trim();
            }
        }

        if (html) html = md.render(html);
        if (frontmatter) frontmatter = yaml.render(frontmatter);

        return { html, frontmatter };
    }

    // fetch content
    $article = document.querySelector(".article div");
    async function content(url) {
        let { html, frontmatter } = await render(url);
        
        $article.innerHTML = `<h1>${frontmatter?.title ?? ""}</h1>`
             + `<div class="meta description">${frontmatter?.description ?? ""}</div>`
             + `<div class="meta updated">${frontmatter?.updated ?? ""}</div>`
             + html;
        document.title = `${frontmatter?.title} :: ${site.title}`;
    }
    
    // 주소 직업 입력
    (async () => {
        await content(window.location.pathname);
    })();

    // a 태그 클릭
    document.body.onclick = async (e) => {
        if (e.target.matches("a") && e.target.href.startsWith(window.location.origin) && !e.target.getAttribute("href").match(/[.#]/)) {
            e.preventDefault();
            if (e.target.href !== window.location.href) {
                history.pushState(null, null, e.target.href);
                await content(window.location.pathname);
            }
        }
    };

    // 전/후 이동버튼
    window.onpopstate = async (e) => {
        await content(window.location.pathname);
    };
    
</script>

<style lang="scss">
    $max-width: 1200px;

    .layout {
        position: fixed; top: 0; right: 0; bottom: 0; left: 0; z-index: 0;
        overflow-x: hidden; overflow-y: scroll;

        &:before, &:after {
            content: " "; display: table-cell; clear: both;
        }
    }
    .header, .article, .footer {
        width: 100%;

        & > div {
            position: relative; width: 100%; max-width: #{$max-width}; margin: 0 auto; padding: 0 5px;
        }
    }
    .header {
        position: sticky; top: 0; z-index: 9999;
        background: var(--bg-sub);
    }
    .footer {
        position: sticky; top: 100vh;
        background: var(--bg-sub);
    }
</style>